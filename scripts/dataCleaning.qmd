---
title: "dataCleaning"
format: html
editor: visual
---

```{r}
#| include: false
library(tidyverse)
#devtools::install_github("kaijagahm/vultureUtils")
library(vultureUtils)
library(here)
library(readxl)
```

```{r}
base::load(here::here("movebankCredentials/pw.Rda"))
MB.LoginObject <- move::movebankLogin(username = "kaijagahm", 
                                      password = pw)
rm(pw)
```

## Download data

```{r}
# Set min and max date
minDate <- "2023-12-01 00:00"
maxDate <- "2023-12-07 00:00"

mydata <- vultureUtils::downloadVultures(loginObject = MB.LoginObject,
                                         removeDup = T, 
                                         dfConvert = T, 
                                         quiet = T, 
                                         dateTimeStartUTC = minDate,
                                         dateTimeEndUTC = maxDate)
```

## Join `Nili_id`s

```{r}
ww <- read_excel(here("data/raw/whoswho_vultures_20230920_new.xlsx"), sheet = "all gps tags")
ww_tojoin <- ww %>% select(Nili_id, Movebank_id) %>% distinct() # pull out just the names columns, nothing else, and remove any duplicates

# join by movebank ID
mydata <- left_join(mydata, ww_tojoin, 
                        by = c("local_identifier" = "Movebank_id"))
```

## Remove invalid periods (hospital etc.)

```{r}
periods_to_remove <- read_excel("data/raw/whoswho_vultures_20230920_new.xlsx", sheet = "periods_to_remove") %>%
  select(Nili_id, remove_start, remove_end) %>%
  mutate(across(contains("remove"), lubridate::ymd)) %>%
  filter(!is.na(remove_end)) %>%
  # The following steps generate a sequence of days between the start and end date, so we can then join them to the original data
  group_by(Nili_id) %>%
  mutate(dateOnly = map2(remove_start, remove_end, seq, by = "1 day")) %>%
  unnest(cols = c(dateOnly)) %>%
  select(Nili_id, dateOnly) %>%
  mutate(remove = T)

removal_annotated <- mydata %>%
  mutate(dateOnly = lubridate::date(timestamp)) %>%
  left_join(periods_to_remove, by = c("Nili_id", "dateOnly"))

removed_periods <- removal_annotated %>%
  filter(is.na(remove))
```

## GPS jamming filter

```{r}
#XXX Ryan's working on this
removeJammed <- vultureUtils::[functionname](removed_periods)
```

## Data cleaning

```{r}
cleaned <- cleanData(dataset = removed_periods,
                     precise = F, 
                     longCol = "location_long",
                     latCol = "location_lat",
                     idCol = "Nili_id",
                     gpsJam = T) # need to remove all gps-jamming-related things in this function
```
